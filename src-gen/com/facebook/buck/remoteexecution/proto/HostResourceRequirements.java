// @generated
// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: remoteexecution/proto/metadata.proto

package com.facebook.buck.remoteexecution.proto;

/**
 * <pre>
 * Host resource requirements (e.g. mem, cpu, device) for executing an action
 * </pre>
 *
 * Protobuf type {@code facebook.remote_execution.HostResourceRequirements}
 */
@javax.annotation.Generated(value="protoc", comments="annotations:HostResourceRequirements.java.pb.meta")
public  final class HostResourceRequirements extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:facebook.remote_execution.HostResourceRequirements)
    HostResourceRequirementsOrBuilder {
private static final long serialVersionUID = 0L;
  // Use HostResourceRequirements.newBuilder() to construct.
  private HostResourceRequirements(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private HostResourceRequirements() {
    affinityKeys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private HostResourceRequirements(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          case 8: {

            memBytes_ = input.readInt64();
            break;
          }
          case 16: {

            cpuUnits_ = input.readInt64();
            break;
          }
          case 26: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000004) != 0)) {
              affinityKeys_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000004;
            }
            affinityKeys_.add(s);
            break;
          }
          case 32: {

            inputFilesBytes_ = input.readInt64();
            break;
          }
          default: {
            if (!parseUnknownField(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000004) != 0)) {
        affinityKeys_ = affinityKeys_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.facebook.buck.remoteexecution.proto.RemoteExecutionMetadataProto.internal_static_facebook_remote_execution_HostResourceRequirements_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.facebook.buck.remoteexecution.proto.RemoteExecutionMetadataProto.internal_static_facebook_remote_execution_HostResourceRequirements_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.facebook.buck.remoteexecution.proto.HostResourceRequirements.class, com.facebook.buck.remoteexecution.proto.HostResourceRequirements.Builder.class);
  }

  private int bitField0_;
  public static final int MEM_BYTES_FIELD_NUMBER = 1;
  private long memBytes_;
  /**
   * <code>int64 mem_bytes = 1;</code>
   */
  public long getMemBytes() {
    return memBytes_;
  }

  public static final int CPU_UNITS_FIELD_NUMBER = 2;
  private long cpuUnits_;
  /**
   * <pre>
   * Number of cpu that action needs. For e.g., set to 2 if you need 2 threads.
   * </pre>
   *
   * <code>int64 cpu_units = 2;</code>
   */
  public long getCpuUnits() {
    return cpuUnits_;
  }

  public static final int AFFINITY_KEYS_FIELD_NUMBER = 3;
  private com.google.protobuf.LazyStringList affinityKeys_;
  /**
   * <pre>
   * List of affinities requested by actions, sorted by client-decided priority. RE will try to schedule actions with same affinity key
   * on same hosts, for better cache locality. RE will try to schedule this action to a host which recently ran affinity_keys[0], if it cannot
   * find such free host, then one which ran affinity_keys[1]... and so on, finally falling back to run on a random host.
   * </pre>
   *
   * <code>repeated string affinity_keys = 3;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getAffinityKeysList() {
    return affinityKeys_;
  }
  /**
   * <pre>
   * List of affinities requested by actions, sorted by client-decided priority. RE will try to schedule actions with same affinity key
   * on same hosts, for better cache locality. RE will try to schedule this action to a host which recently ran affinity_keys[0], if it cannot
   * find such free host, then one which ran affinity_keys[1]... and so on, finally falling back to run on a random host.
   * </pre>
   *
   * <code>repeated string affinity_keys = 3;</code>
   */
  public int getAffinityKeysCount() {
    return affinityKeys_.size();
  }
  /**
   * <pre>
   * List of affinities requested by actions, sorted by client-decided priority. RE will try to schedule actions with same affinity key
   * on same hosts, for better cache locality. RE will try to schedule this action to a host which recently ran affinity_keys[0], if it cannot
   * find such free host, then one which ran affinity_keys[1]... and so on, finally falling back to run on a random host.
   * </pre>
   *
   * <code>repeated string affinity_keys = 3;</code>
   */
  public java.lang.String getAffinityKeys(int index) {
    return affinityKeys_.get(index);
  }
  /**
   * <pre>
   * List of affinities requested by actions, sorted by client-decided priority. RE will try to schedule actions with same affinity key
   * on same hosts, for better cache locality. RE will try to schedule this action to a host which recently ran affinity_keys[0], if it cannot
   * find such free host, then one which ran affinity_keys[1]... and so on, finally falling back to run on a random host.
   * </pre>
   *
   * <code>repeated string affinity_keys = 3;</code>
   */
  public com.google.protobuf.ByteString
      getAffinityKeysBytes(int index) {
    return affinityKeys_.getByteString(index);
  }

  public static final int INPUT_FILES_BYTES_FIELD_NUMBER = 4;
  private long inputFilesBytes_;
  /**
   * <pre>
   * Total size of the files used as input for the action.
   * </pre>
   *
   * <code>int64 input_files_bytes = 4;</code>
   */
  public long getInputFilesBytes() {
    return inputFilesBytes_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (memBytes_ != 0L) {
      output.writeInt64(1, memBytes_);
    }
    if (cpuUnits_ != 0L) {
      output.writeInt64(2, cpuUnits_);
    }
    for (int i = 0; i < affinityKeys_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, affinityKeys_.getRaw(i));
    }
    if (inputFilesBytes_ != 0L) {
      output.writeInt64(4, inputFilesBytes_);
    }
    unknownFields.writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (memBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(1, memBytes_);
    }
    if (cpuUnits_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(2, cpuUnits_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < affinityKeys_.size(); i++) {
        dataSize += computeStringSizeNoTag(affinityKeys_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getAffinityKeysList().size();
    }
    if (inputFilesBytes_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(4, inputFilesBytes_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.facebook.buck.remoteexecution.proto.HostResourceRequirements)) {
      return super.equals(obj);
    }
    com.facebook.buck.remoteexecution.proto.HostResourceRequirements other = (com.facebook.buck.remoteexecution.proto.HostResourceRequirements) obj;

    if (getMemBytes()
        != other.getMemBytes()) return false;
    if (getCpuUnits()
        != other.getCpuUnits()) return false;
    if (!getAffinityKeysList()
        .equals(other.getAffinityKeysList())) return false;
    if (getInputFilesBytes()
        != other.getInputFilesBytes()) return false;
    if (!unknownFields.equals(other.unknownFields)) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + MEM_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getMemBytes());
    hash = (37 * hash) + CPU_UNITS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getCpuUnits());
    if (getAffinityKeysCount() > 0) {
      hash = (37 * hash) + AFFINITY_KEYS_FIELD_NUMBER;
      hash = (53 * hash) + getAffinityKeysList().hashCode();
    }
    hash = (37 * hash) + INPUT_FILES_BYTES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getInputFilesBytes());
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.facebook.buck.remoteexecution.proto.HostResourceRequirements parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.facebook.buck.remoteexecution.proto.HostResourceRequirements parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.facebook.buck.remoteexecution.proto.HostResourceRequirements parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.facebook.buck.remoteexecution.proto.HostResourceRequirements parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.facebook.buck.remoteexecution.proto.HostResourceRequirements parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.facebook.buck.remoteexecution.proto.HostResourceRequirements parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.facebook.buck.remoteexecution.proto.HostResourceRequirements parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.facebook.buck.remoteexecution.proto.HostResourceRequirements parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.facebook.buck.remoteexecution.proto.HostResourceRequirements parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.facebook.buck.remoteexecution.proto.HostResourceRequirements parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.facebook.buck.remoteexecution.proto.HostResourceRequirements parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.facebook.buck.remoteexecution.proto.HostResourceRequirements parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.facebook.buck.remoteexecution.proto.HostResourceRequirements prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Host resource requirements (e.g. mem, cpu, device) for executing an action
   * </pre>
   *
   * Protobuf type {@code facebook.remote_execution.HostResourceRequirements}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:facebook.remote_execution.HostResourceRequirements)
      com.facebook.buck.remoteexecution.proto.HostResourceRequirementsOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.facebook.buck.remoteexecution.proto.RemoteExecutionMetadataProto.internal_static_facebook_remote_execution_HostResourceRequirements_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.facebook.buck.remoteexecution.proto.RemoteExecutionMetadataProto.internal_static_facebook_remote_execution_HostResourceRequirements_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.facebook.buck.remoteexecution.proto.HostResourceRequirements.class, com.facebook.buck.remoteexecution.proto.HostResourceRequirements.Builder.class);
    }

    // Construct using com.facebook.buck.remoteexecution.proto.HostResourceRequirements.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      memBytes_ = 0L;

      cpuUnits_ = 0L;

      affinityKeys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      inputFilesBytes_ = 0L;

      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.facebook.buck.remoteexecution.proto.RemoteExecutionMetadataProto.internal_static_facebook_remote_execution_HostResourceRequirements_descriptor;
    }

    @java.lang.Override
    public com.facebook.buck.remoteexecution.proto.HostResourceRequirements getDefaultInstanceForType() {
      return com.facebook.buck.remoteexecution.proto.HostResourceRequirements.getDefaultInstance();
    }

    @java.lang.Override
    public com.facebook.buck.remoteexecution.proto.HostResourceRequirements build() {
      com.facebook.buck.remoteexecution.proto.HostResourceRequirements result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public com.facebook.buck.remoteexecution.proto.HostResourceRequirements buildPartial() {
      com.facebook.buck.remoteexecution.proto.HostResourceRequirements result = new com.facebook.buck.remoteexecution.proto.HostResourceRequirements(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      result.memBytes_ = memBytes_;
      result.cpuUnits_ = cpuUnits_;
      if (((bitField0_ & 0x00000004) != 0)) {
        affinityKeys_ = affinityKeys_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000004);
      }
      result.affinityKeys_ = affinityKeys_;
      result.inputFilesBytes_ = inputFilesBytes_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    @java.lang.Override
    public Builder clone() {
      return super.clone();
    }
    @java.lang.Override
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.setField(field, value);
    }
    @java.lang.Override
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return super.clearField(field);
    }
    @java.lang.Override
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return super.clearOneof(oneof);
    }
    @java.lang.Override
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return super.setRepeatedField(field, index, value);
    }
    @java.lang.Override
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return super.addRepeatedField(field, value);
    }
    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.facebook.buck.remoteexecution.proto.HostResourceRequirements) {
        return mergeFrom((com.facebook.buck.remoteexecution.proto.HostResourceRequirements)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.facebook.buck.remoteexecution.proto.HostResourceRequirements other) {
      if (other == com.facebook.buck.remoteexecution.proto.HostResourceRequirements.getDefaultInstance()) return this;
      if (other.getMemBytes() != 0L) {
        setMemBytes(other.getMemBytes());
      }
      if (other.getCpuUnits() != 0L) {
        setCpuUnits(other.getCpuUnits());
      }
      if (!other.affinityKeys_.isEmpty()) {
        if (affinityKeys_.isEmpty()) {
          affinityKeys_ = other.affinityKeys_;
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          ensureAffinityKeysIsMutable();
          affinityKeys_.addAll(other.affinityKeys_);
        }
        onChanged();
      }
      if (other.getInputFilesBytes() != 0L) {
        setInputFilesBytes(other.getInputFilesBytes());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.facebook.buck.remoteexecution.proto.HostResourceRequirements parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.facebook.buck.remoteexecution.proto.HostResourceRequirements) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private long memBytes_ ;
    /**
     * <code>int64 mem_bytes = 1;</code>
     */
    public long getMemBytes() {
      return memBytes_;
    }
    /**
     * <code>int64 mem_bytes = 1;</code>
     */
    public Builder setMemBytes(long value) {
      
      memBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>int64 mem_bytes = 1;</code>
     */
    public Builder clearMemBytes() {
      
      memBytes_ = 0L;
      onChanged();
      return this;
    }

    private long cpuUnits_ ;
    /**
     * <pre>
     * Number of cpu that action needs. For e.g., set to 2 if you need 2 threads.
     * </pre>
     *
     * <code>int64 cpu_units = 2;</code>
     */
    public long getCpuUnits() {
      return cpuUnits_;
    }
    /**
     * <pre>
     * Number of cpu that action needs. For e.g., set to 2 if you need 2 threads.
     * </pre>
     *
     * <code>int64 cpu_units = 2;</code>
     */
    public Builder setCpuUnits(long value) {
      
      cpuUnits_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Number of cpu that action needs. For e.g., set to 2 if you need 2 threads.
     * </pre>
     *
     * <code>int64 cpu_units = 2;</code>
     */
    public Builder clearCpuUnits() {
      
      cpuUnits_ = 0L;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList affinityKeys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureAffinityKeysIsMutable() {
      if (!((bitField0_ & 0x00000004) != 0)) {
        affinityKeys_ = new com.google.protobuf.LazyStringArrayList(affinityKeys_);
        bitField0_ |= 0x00000004;
       }
    }
    /**
     * <pre>
     * List of affinities requested by actions, sorted by client-decided priority. RE will try to schedule actions with same affinity key
     * on same hosts, for better cache locality. RE will try to schedule this action to a host which recently ran affinity_keys[0], if it cannot
     * find such free host, then one which ran affinity_keys[1]... and so on, finally falling back to run on a random host.
     * </pre>
     *
     * <code>repeated string affinity_keys = 3;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getAffinityKeysList() {
      return affinityKeys_.getUnmodifiableView();
    }
    /**
     * <pre>
     * List of affinities requested by actions, sorted by client-decided priority. RE will try to schedule actions with same affinity key
     * on same hosts, for better cache locality. RE will try to schedule this action to a host which recently ran affinity_keys[0], if it cannot
     * find such free host, then one which ran affinity_keys[1]... and so on, finally falling back to run on a random host.
     * </pre>
     *
     * <code>repeated string affinity_keys = 3;</code>
     */
    public int getAffinityKeysCount() {
      return affinityKeys_.size();
    }
    /**
     * <pre>
     * List of affinities requested by actions, sorted by client-decided priority. RE will try to schedule actions with same affinity key
     * on same hosts, for better cache locality. RE will try to schedule this action to a host which recently ran affinity_keys[0], if it cannot
     * find such free host, then one which ran affinity_keys[1]... and so on, finally falling back to run on a random host.
     * </pre>
     *
     * <code>repeated string affinity_keys = 3;</code>
     */
    public java.lang.String getAffinityKeys(int index) {
      return affinityKeys_.get(index);
    }
    /**
     * <pre>
     * List of affinities requested by actions, sorted by client-decided priority. RE will try to schedule actions with same affinity key
     * on same hosts, for better cache locality. RE will try to schedule this action to a host which recently ran affinity_keys[0], if it cannot
     * find such free host, then one which ran affinity_keys[1]... and so on, finally falling back to run on a random host.
     * </pre>
     *
     * <code>repeated string affinity_keys = 3;</code>
     */
    public com.google.protobuf.ByteString
        getAffinityKeysBytes(int index) {
      return affinityKeys_.getByteString(index);
    }
    /**
     * <pre>
     * List of affinities requested by actions, sorted by client-decided priority. RE will try to schedule actions with same affinity key
     * on same hosts, for better cache locality. RE will try to schedule this action to a host which recently ran affinity_keys[0], if it cannot
     * find such free host, then one which ran affinity_keys[1]... and so on, finally falling back to run on a random host.
     * </pre>
     *
     * <code>repeated string affinity_keys = 3;</code>
     */
    public Builder setAffinityKeys(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureAffinityKeysIsMutable();
      affinityKeys_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of affinities requested by actions, sorted by client-decided priority. RE will try to schedule actions with same affinity key
     * on same hosts, for better cache locality. RE will try to schedule this action to a host which recently ran affinity_keys[0], if it cannot
     * find such free host, then one which ran affinity_keys[1]... and so on, finally falling back to run on a random host.
     * </pre>
     *
     * <code>repeated string affinity_keys = 3;</code>
     */
    public Builder addAffinityKeys(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureAffinityKeysIsMutable();
      affinityKeys_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of affinities requested by actions, sorted by client-decided priority. RE will try to schedule actions with same affinity key
     * on same hosts, for better cache locality. RE will try to schedule this action to a host which recently ran affinity_keys[0], if it cannot
     * find such free host, then one which ran affinity_keys[1]... and so on, finally falling back to run on a random host.
     * </pre>
     *
     * <code>repeated string affinity_keys = 3;</code>
     */
    public Builder addAllAffinityKeys(
        java.lang.Iterable<java.lang.String> values) {
      ensureAffinityKeysIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, affinityKeys_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of affinities requested by actions, sorted by client-decided priority. RE will try to schedule actions with same affinity key
     * on same hosts, for better cache locality. RE will try to schedule this action to a host which recently ran affinity_keys[0], if it cannot
     * find such free host, then one which ran affinity_keys[1]... and so on, finally falling back to run on a random host.
     * </pre>
     *
     * <code>repeated string affinity_keys = 3;</code>
     */
    public Builder clearAffinityKeys() {
      affinityKeys_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000004);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * List of affinities requested by actions, sorted by client-decided priority. RE will try to schedule actions with same affinity key
     * on same hosts, for better cache locality. RE will try to schedule this action to a host which recently ran affinity_keys[0], if it cannot
     * find such free host, then one which ran affinity_keys[1]... and so on, finally falling back to run on a random host.
     * </pre>
     *
     * <code>repeated string affinity_keys = 3;</code>
     */
    public Builder addAffinityKeysBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureAffinityKeysIsMutable();
      affinityKeys_.add(value);
      onChanged();
      return this;
    }

    private long inputFilesBytes_ ;
    /**
     * <pre>
     * Total size of the files used as input for the action.
     * </pre>
     *
     * <code>int64 input_files_bytes = 4;</code>
     */
    public long getInputFilesBytes() {
      return inputFilesBytes_;
    }
    /**
     * <pre>
     * Total size of the files used as input for the action.
     * </pre>
     *
     * <code>int64 input_files_bytes = 4;</code>
     */
    public Builder setInputFilesBytes(long value) {
      
      inputFilesBytes_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Total size of the files used as input for the action.
     * </pre>
     *
     * <code>int64 input_files_bytes = 4;</code>
     */
    public Builder clearInputFilesBytes() {
      
      inputFilesBytes_ = 0L;
      onChanged();
      return this;
    }
    @java.lang.Override
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFields(unknownFields);
    }

    @java.lang.Override
    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:facebook.remote_execution.HostResourceRequirements)
  }

  // @@protoc_insertion_point(class_scope:facebook.remote_execution.HostResourceRequirements)
  private static final com.facebook.buck.remoteexecution.proto.HostResourceRequirements DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.facebook.buck.remoteexecution.proto.HostResourceRequirements();
  }

  public static com.facebook.buck.remoteexecution.proto.HostResourceRequirements getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<HostResourceRequirements>
      PARSER = new com.google.protobuf.AbstractParser<HostResourceRequirements>() {
    @java.lang.Override
    public HostResourceRequirements parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new HostResourceRequirements(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<HostResourceRequirements> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<HostResourceRequirements> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public com.facebook.buck.remoteexecution.proto.HostResourceRequirements getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

