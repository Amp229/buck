load("//tools/build_rules:java_rules.bzl", "buck_java_library", "buck_prebuilt_jar")
buck_java_library(
    name = "intellij-plugin-sdk",
    visibility = [
        "PUBLIC",
    ],
    exported_deps = [
        ":android",
        ":annotations",
        ":extensions",
        ":idea",
        ":java-api",
        ":java-impl",
        ":jdom",
        ":platform-api",
        ":platform-impl",
        ":platform-util-ui",
        ":platform-core-ui",
        ":platform-ide-util-io",
        ":platform-concurrency",
        ":serviceMessages",
        ":util",
        ":trove4j",
        # IntelliJ will provide these, too...
        "//third-party/java/guava:guava",
        "//third-party/java/jsr:jsr305",
    ],
)

buck_prebuilt_jar(
    name = "android",
    binary_jar = "android.jar",
)

buck_prebuilt_jar(
    name = "annotations",
    binary_jar = "annotations.jar",
)

buck_prebuilt_jar(
    name = "extensions",
    binary_jar = "extensions.jar",
)

buck_prebuilt_jar(
    name = "idea",
    binary_jar = "idea.jar",
)

buck_prebuilt_jar(
    name = "java-api",
    binary_jar = "java-api.jar",
)

buck_prebuilt_jar(
    name = "java-impl",
    binary_jar = "java-impl.jar",
)

buck_prebuilt_jar(
    name = "jdom",
    binary_jar = "jdom.jar",
)

buck_prebuilt_jar(
    name = "platform-api",
    binary_jar = "platform-api.jar",
)

buck_prebuilt_jar(
    name = "platform-impl",
    binary_jar = "platform-impl.jar",
)

buck_prebuilt_jar(
    name = "platform-util-ui",
    binary_jar = "platform-util-ui.jar",
)

buck_prebuilt_jar(
    name = "platform-core-ui",
    binary_jar = "platform-core-ui.jar",
)

buck_prebuilt_jar(
    name = "platform-ide-util-io",
    binary_jar = "platform-ide-util-io.jar",
)

buck_prebuilt_jar(
    name = "platform-concurrency",
    binary_jar = "platform-concurrency.jar",
)

buck_prebuilt_jar(
    name = "serviceMessages",
    binary_jar = "serviceMessages-2019.1.4.jar",
)

buck_prebuilt_jar(
    name = "util",
    binary_jar = "util.jar",
)

buck_prebuilt_jar(
    name = "trove4j",
    binary_jar = "trove4j.jar",
)
